version: "3.5"
services:
  # faktenforum-api:
  #   image: ghcr.io/faktenforum/faktenforum-api:latest-dev
  #   ports:
  #     - 8783:8083
  #   environment:
  #     HOST_URL: ${HOST_URL}
  #     JWT_SECRET: ${JWT_SECRET}
  #     JWT_REFRESH_TOKEN_LIFETIME: ${JWT_REFRESH_TOKEN_LIFETIME}
  #     JWT_TOKEN_TOKEN_LIFETIME: ${JWT_TOKEN_TOKEN_LIFETIME}
  #     JWT_ISSUER: ${JWT_ISSUER}
  #     JWT_AUDIENCE: ${JWT_AUDIENCE}
  #     CLAIM_SUBMISSION_TOKEN_LIFETIME: ${CLAIM_SUBMISSION_TOKEN_LIFETIME}
  #     MONGODB_HOST: ${MONGODB_HOST}
  #     MONGODB_PORT: ${MONGODB_PORT}
  #     MONGODB_AGENDA_USER: ${MONGODB_AGENDA_USER}
  #     MONGODB_AGENDA_PASSWORD: ${MONGODB_AGENDA_PASSWORD}
  #     MONGODB_AGENDA_DB: ${MONGODB_AGENDA_DB}
  #     MINIO_HOST: ${MINIO_HOST}
  #     MINIO_API_PORT: ${MINIO_API_PORT}
  #     MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
  #     MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
  #     MINIO_REGION: ${MINIO_REGION}
  #     MINIO_BUCKET_NAME: ${MINIO_BUCKET_NAME}
  # # faktenforum-frontend:
  # #   image: ghcr.io/faktenforum/faktenforum-frontend:latest-dev
  # #   ports:
  # #     - 8780:3000
  db:
    image: postgres:15.2
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
  mongodb: # Add a MongoDB instance
    image: mongo:latest # Use a minimal version of MongoDB
    ports:
      - "${MONGODB_PORT}:${MONGODB_PORT}"
    volumes:
      - ./scripts/mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh:ro
      - mongodb_data:/data/db # Store MongoDB data in a volume
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_ROOT_PASSWORD}
      MONGODB_AGENDA_USER: ${MONGODB_AGENDA_USER}
      MONGODB_AGENDA_PASSWORD: ${MONGODB_AGENDA_PASSWORD}
      MONGODB_AGENDA_DB: ${MONGODB_AGENDA_DB}

  minio:
    image: minio/minio
    ports:
      - "${MINIO_API_PORT}:${MINIO_API_PORT}"
      - "${MINIO_CONSOLE_PORT}:${MINIO_CONSOLE_PORT}"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - minio_data:/data
    command: server /data --console-address ":${MINIO_CONSOLE_PORT}"
  minio-client:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      echo 'Waiting for MinIO to be ready...' &&
      sleep 5 &&
      mc alias set myminio http://minio:${MINIO_API_PORT} ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD} &&
      mc admin user svcacct add  myminio ${MINIO_ROOT_USER} --access-key ${MINIO_ACCESS_KEY} --secret-key ${MINIO_SECRET_KEY} &&
      mc mb myminio/${MINIO_BUCKET_NAME} &&
      echo 'Service account and bucket created in MinIO'"

volumes:
  db_data:
  minio_data:
  mailhog-data:
  mongodb_data:

networks:
  faktenforum:
    driver: bridge
