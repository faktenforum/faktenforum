version: "3.5"
services:
  traefik:
    image: traefik:latest
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.file.directory=/etc/traefik/dynamic_conf"
      - "--accesslog=true"
      - "--accesslog.fields.headers.defaultmode=keep"
      - "--accesslog.fields.headers.names.User-Agent=drop"
      - "--accesslog.fields.headers.names.Content-Type=drop"
      - "--entryPoints.web.address=:80"

    ports:
      - "8000:80"
      - "8181:8080" # The Traefik dashboard
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik/dynamic_conf:/etc/traefik/dynamic_conf"
      - "./traefik/logs:/logs"
    networks:
      - traefik-ingress
      - faktenforum
    extra_hosts:
      - "host.docker.internal:host-gateway"

  postgres-db:
    build:
      context: ./database
      dockerfile: Dockerfile.db-postgres
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: ${POSTGRES_PORT}

    networks:
      - faktenforum

  graphql-engine:
    image: hasura/graphql-engine:v2.36.0-ce
    ports:
      - "8080:8080"
    restart: always
    environment:
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres-db:${POSTGRES_PORT}/hasura
      PGDATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres-db:${POSTGRES_PORT}/faktenforum
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      HASURA_GRAPHQL_READ_ONLY_MODE: "false"
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_ADMIN_SECRET}
      HASURA_GRAPHQL_AUTH_HOOK: ${HASURA_WEBHOOKS_BASE_URL}/session
      HASURA_WEBHOOKS_BASE_URL: ${HASURA_WEBHOOKS_BASE_URL}
      HASURA_WEBHOOKS_API_KEY: ${HASURA_API_KEY}
      HASURA_GRAPHQL_AUTH_HOOK_SEND_REQUEST_BODY: ${HASURA_GRAPHQL_AUTH_HOOK_SEND_REQUEST_BODY}
      HASURA_GRAPHQL_EXPERIMENTAL_FEATURES: "naming_convention"
      HASURA_GRAPHQL_DEFAULT_NAMING_CONVENTION: "graphql-default"
    # depends_on:
    #   data-connector-agent:
    #     condition: service_healthy
    labels:
      - "traefik.docker.network=traefik-ingress"
      - "traefik.enable=true"

      # Router for Hasura GraphQL API
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-hasura-api.entryPoints=web"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-hasura-api.rule=Host(`test.localhost`) && PathPrefix(`/api/v1/graphql`)"
      - "traefik.http.middlewares.${COMPOSE_PROJECT_NAME}-hasura-api-stripprefix.stripprefix.prefixes=/api"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-hasura-api.middlewares=${COMPOSE_PROJECT_NAME}-hasura-api-stripprefix"
      - "traefik.http.services.${COMPOSE_PROJECT_NAME}-hasura-api.loadbalancer.server.port=8080"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-hasura-api.service=${COMPOSE_PROJECT_NAME}-hasura-api"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-hasura-console.entryPoints=web"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-hasura-console.rule=Host(`test2.localhost`) && PathPrefix(`/console`)"

      - "traefik.http.services.${COMPOSE_PROJECT_NAME}-hasura-console.loadbalancer.server.port=8080"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-hasura-console.service=${COMPOSE_PROJECT_NAME}-hasura-console"

    networks:
      - faktenforum
      - traefik-ingress
    extra_hosts:
      - "host.docker.internal:host-gateway"

volumes:
  db_data:

networks:
  faktenforum:
    driver: bridge
  traefik-ingress:
    driver: bridge
